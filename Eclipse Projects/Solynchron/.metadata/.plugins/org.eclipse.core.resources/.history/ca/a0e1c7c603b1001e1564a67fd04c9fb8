/**
 * 
 */
package com.damnhandy.aspects.bean.test;

import java.beans.IndexedPropertyChangeEvent;
import java.beans.PropertyChangeEvent;

import com.damnhandy.aspects.bean.impl.NestedIndexedPropertyChangeEvent;

/**
 * @author plamKaTa
 *
 */
public class IndexedObjectListener extends ValueObjectListener {
	
	private int index;
	
	private Object nested;
	
	/**
	 * 
	 */
	public IndexedObjectListener() {
		// TODO Auto-generated constructor stub
	}

	/* (non-Javadoc)
	 * @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
	 */
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		super.propertyChange(evt);
	}
	
	@Override
	protected void print(PropertyChangeEvent evt) {
		String evtString = "New: "+evt.getNewValue()+ " Old: "+evt.getOldValue();
		if (evt instanceof IndexedPropertyChangeEvent) {
			IndexedPropertyChangeEvent indexedEvt = (IndexedPropertyChangeEvent) evt;
			index = indexedEvt.getIndex();
			evtString = "Index: " + index + " " + evtString;
		}
		if (evt instanceof NestedIndexedPropertyChangeEvent) {
			NestedIndexedPropertyChangeEvent nestedEvt = (NestedIndexedPropertyChangeEvent) evt;
			nested = nestedEvt.getNested();
		}
		System.out.println(evtString);
	}
	
	public int getIndex() {
		return index;
	}
	
	public void reset() {
		super.reset();
		index = -1;
	}
	
}
